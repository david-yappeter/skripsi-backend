// Code generated by "go run myapp/tool/stringer -linecomment -type=Role -output=role_enum_gen.go -swagoutput=../tool/swag/enum_gen/role_enum_gen.go -custom"; DO NOT EDIT.

package data_type

import (
	"database/sql/driver"
	"encoding/json"
	"fmt"
	"strconv"
)

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[RoleSuperAdmin-1]
	_ = x[RoleInventory-2]
	_ = x[RoleCashier-3]
	_ = x[RoleDriver-4]
}

const _Role_nameReadable = "Super Admin, Inventory, Cashier, Driver"

const _Role_name = "Super AdminInventoryCashierDriver"

var _Role_index = [...]uint8{0, 11, 20, 27, 33}

func (i *Role) Determine(s string) {
	switch s {
	case "Super Admin":
		*i = RoleSuperAdmin
	case "Inventory":
		*i = RoleInventory
	case "Cashier":
		*i = RoleCashier
	case "Driver":
		*i = RoleDriver
	default:
		*i = 0
	}
}

func (i Role) IsValid() bool {
	if i == 0 {
		return false
	}

	return true
}

func (i Role) GetValidValuesString() string {
	return _Role_nameReadable
}

func (i Role) String() string {
	i -= 1
	if i < 0 || i >= Role(len(_Role_index)-1) {
		return "Role(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}

	return _Role_name[_Role_index[i]:_Role_index[i+1]]
}

func (i Role) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

func (i *Role) UnmarshalJSON(b []byte) error {
	var s string
	if err := json.Unmarshal(b, &s); err != nil {
		return err
	}

	i.Determine(s)

	return nil
}

func (i *Role) UnmarshalText(b []byte) error {
	i.Determine(string(b))

	return nil
}

func (i *Role) Scan(value interface{}) error {
	switch s := value.(type) {
	case string:
		i.Determine(s)
	default:
		return fmt.Errorf("unsupported Scan, storing driver.Value type %T into type %T", value, i)
	}

	return nil
}

func (i Role) Value() (driver.Value, error) {
	return i.String(), nil
}

func RoleP(v Role) *Role {
	return &v
}

func ListRole() []Role {
	return []Role{
		RoleSuperAdmin,
		RoleInventory,
		RoleCashier,
		RoleDriver,
	}
}

func ListRoleString() []string {
	return []string{
		RoleSuperAdmin.String(),
		RoleInventory.String(),
		RoleCashier.String(),
		RoleDriver.String(),
	}
}
